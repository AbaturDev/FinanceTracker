@using FinanceTracker.Client.Common
@using FinanceTracker.Client.Dtos.ExpensesPlanners
@inject IExpensesPlannerService ExpensesPlannerService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudContainer>
            <MudForm @ref="_from" @bind-IsValid="_isValid">
                <MudTextField @bind-Value="_expensesPlannerDto.Name" Label="Name" Required="true"> </MudTextField>
                <MudNumericField T="decimal?" @bind-Value="_expensesPlannerDto.Budget" Label="Budget" Required="true" Adornment="Adornment.End" Min="0" Step="new decimal(0.01)" Format="N2" />
                <MudSelect T="string" @bind-Value="_expensesPlannerDto.CurrencyCode" Label="Currency (optional)">
                    @foreach (var currency in CurrencyCodeTable.Currencies)
                    {
                        <MudSelectItem Value="@currency">@currency</MudSelectItem>
                    }
                </MudSelect>
                <MudTextField @bind-Value="_expensesPlannerDto.CategoryName" Label="Category name (optional)" Required="false"> </MudTextField>
            </MudForm >
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Class="d-flex justify-content-start" OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="SubmitForm" Disabled="!_isValid">Add</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private CreateExpensesPlannerDto _expensesPlannerDto = new();
    private MudForm _from;
    private bool _isValid = false;
    
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private async Task SubmitForm()
    {
        var result = await ExpensesPlannerService.CreateExpensesPlannerAsync(_expensesPlannerDto, new CancellationToken());
        if (result.IsSuccess)
        {
            Snackbar.Add("Created new expenses planner", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add($"Fail to create new expenses planner - {result.ErrorMessage}", Severity.Error);
            MudDialog.Cancel();
        }
    }
    
    void Cancel() => MudDialog.Cancel();
    
}
